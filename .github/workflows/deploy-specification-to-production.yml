name: Build adocs and deploy specification to data.norge.no

on:
  push:
    branches:
      - main
    paths:
      - cpsv-ap-no/**
      - dcat-ap-no/**
      - overview/**
      - demo-uris/**
      - dummy-assets/**
      - modelldcat-ap-no/**
      - skos-ap-no/**
      - xkos-ap-no/**

jobs:
  filter_path:
    name: Setup path filter
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      cpsv: ${{ steps.filter.outputs.cpsv }}
      dcat: ${{ steps.filter.outputs.dcat }}
      demo_uris: ${{ steps.filter.outputs.demo_uris }}
      dummy_assets: ${{ steps.filter.outputs.dummy_assets }}
      modelldcat: ${{ steps.filter.outputs.modelldcat }}
      root: ${{ steps.filter.outputs.root }}
      skos: ${{ steps.filter.outputs.skos }}
      xkos: ${{ steps.filter.outputs.xkos }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Filter
      uses: dorny/paths-filter@v2
      id: filter
      with:
        ref:
          'main'
        filters: |
          cpsv:
            - 'cpsv-ap-no/**'
          dcat:
            - 'dcat-ap-no/**'
          demo_uris:
            - 'demo-uris/**'
          dummy_assets:
            - 'dummy-assets/**'
          modelldcat:
            - 'modelldcat-ap-no/**'
          root:
            - 'overview/**'
          skos:
            - 'skos-ap-no/**'
          xkos:
            - 'xkos-ap-no/**'

  cpsv_build_upload:
    needs: filter_path
    if: ${{ needs.filter_path.outputs.cpsv == 'true' }}
    uses: Informasjonsforvaltning/workflows/.github/workflows/specification-upload-files.yaml@main
    name: cpsv
    with:
      host: "https://data.norge.no"
      ontology: "cpsv-ap-no"
      ontology-type: "showroom"
      program: "asciidoctor -D cpsv-ap-no -o index.html -a lang=en cpsv-ap-no/main.adoc"
      files: |
        cpsv-ap-no/index.html text/html en
        cpsv-ap-no/files/demo-services-events.ttl text/turtle en files/demo-services-events.ttl
        cpsv-ap-no/files/demo-services-events-en.html text/html en files/demo-services-events-en.html
        cpsv-ap-no/files/demo-services-events-nb.html text/html nb files/demo-services-events-nb.html
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      STATIC_RDF_SERVER_API_KEY: ${{ secrets.STATIC_RDF_SERVER_API_KEY }}

  dcat_build_upload:
    needs: filter_path
    if: ${{ needs.filter_path.outputs.dcat == 'true' }}
    uses: Informasjonsforvaltning/workflows/.github/workflows/specification-upload-files.yaml@main
    name: dcat
    with:
      host: "https://data.norge.no"
      ontology: "dcat-ap-no"
      ontology-type: "showroom"
      program: "asciidoctor -D dcat-ap-no -o index.html -a lang=en dcat-ap-no/main.adoc"
      files: |
        dcat-ap-no/index.html text/html en
        dcat-ap-no/files/demo-datasets.ttl text/turtle en files/demo-datasets.ttl
        dcat-ap-no/files/demo-datasets-en.html text/html en files/demo-datasets-en.html
        dcat-ap-no/files/demo-datasets-nb.html text/html nb files/demo-datasets-nb.html
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      STATIC_RDF_SERVER_API_KEY: ${{ secrets.STATIC_RDF_SERVER_API_KEY }}

  demo_uris_build_upload:
    needs: filter_path
    if: ${{ needs.filter_path.outputs.demo_uris == 'true' }}
    uses: Informasjonsforvaltning/workflows/.github/workflows/specification-upload-files.yaml@main
    name: demo-uris
    with:
      host: "https://data.norge.no"
      ontology: "demo-uris"
      ontology-type: "showroom"
      program: "asciidoctor -D demo-uris -o index.html -a lang=en demo-uris/main.adoc"
      files: |
        demo-uris/index.html text/html en
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      STATIC_RDF_SERVER_API_KEY: ${{ secrets.STATIC_RDF_SERVER_API_KEY }}

  dummy_assets_build_deploy:
    needs: filter_path
    if: ${{ needs.filter_path.outputs.dummy_assets == 'true' }}
    uses: Informasjonsforvaltning/workflows/.github/workflows/specification-upload-files.yaml@main
    name: dummy-assets
    with:
      host: "https://data.norge.no"
      ontology: "dummy-assets"
      ontology-type: "showroom"
      program: "asciidoctor -D dummy-assets -o index.html -a lang=en dummy-assets/main.adoc"
      files: |
        dummy-assets/index.html text/html en
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      STATIC_RDF_SERVER_API_KEY: ${{ secrets.STATIC_RDF_SERVER_API_KEY }}

  modelldcat_build_deploy:
    needs: filter_path
    if: ${{ needs.filter_path.outputs.modelldcat == 'true' }}
    uses: Informasjonsforvaltning/workflows/.github/workflows/specification-upload-files.yaml@main
    name: modelldcat
    with:
      host: "https://data.norge.no"
      ontology: "modelldcat-ap-no"
      ontology-type: "showroom"
      program: "asciidoctor -D modelldcat-ap-no -o index.html -a lang=en modelldcat-ap-no/main.adoc"
      files: |
        modelldcat-ap-no/index.html text/html en
        modelldcat-ap-no/files/demo-models.ttl text/turtle en files/demo-models.ttl
        modelldcat-ap-no/files/demo-models-en.html text/html en files/demo-models-en.html
        modelldcat-ap-no/files/demo-models-nb.html text/html nb files/demo-models-nb.html
        modelldcat-ap-no/images/demomodel1.png image/png en images/demomodel1.png
        modelldcat-ap-no/images/demomodel1-mapping-examples.png image/png en images/demomodel1-mapping-examples.png
        modelldcat-ap-no/images/demomodel2.png image/png en images/demomodel2.png
        modelldcat-ap-no/images/demomodel3.png image/png en images/demomodel3.png
        modelldcat-ap-no/images/demomodel4.png image/png en images/demomodel4.png
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      STATIC_RDF_SERVER_API_KEY: ${{ secrets.STATIC_RDF_SERVER_API_KEY }}
   
  root_build_upload:
    needs: filter_path
    if: ${{ needs.filter_path.outputs.root == 'true' }}
    uses: Informasjonsforvaltning/workflows/.github/workflows/specification-upload-files.yaml@main
    name: root
    with:
      ontology-type: "showroom"
      ontology: "overview"
      host: "https://data.norge.no"
      program: "asciidoctor -D overview -o index.html -a lang=en overview/main.adoc"
      files: |
        overview/index.html text/html en
        overview/images/crossreferencing-between-showrooms.png image/png en images/crossreferencing-between-showrooms.png
        overview/images/Digdir.png image/png en images/Digdir.png
        overview/images/registering-n-harvesting.png image/png en images/registering-n-harvesting.png
        overview/images/work-in-progress.png image/png en images/work-in-progress.png
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      STATIC_RDF_SERVER_API_KEY: ${{ secrets.STATIC_RDF_SERVER_API_KEY }}

  skos_build_deploy:
    needs: filter_path
    if: ${{ needs.filter_path.outputs.skos == 'true' }}
    uses: Informasjonsforvaltning/workflows/.github/workflows/specification-upload-files.yaml@main
    name: skos-ap-no-begrep
    with:
      ontology-type: "showroom"
      ontology: "skos-ap-no"
      host: "https://data.norge.no"
      program: "asciidoctor -D skos-ap-no -o index.html -a lang=en skos-ap-no/main.adoc"
      files: |
        skos-ap-no/index.html text/html en
        skos-ap-no/images/concept-diagrams-iso.png image/png en images/concept-diagrams-iso.png
        skos-ap-no/images/concept-models-uml.png image/png en images/concept-models-uml.png
        skos-ap-no/images/hierarchical-relations-explanations.png image/png en images/hierarchical-relations-explanations.png
        skos-ap-no/files/demo-concepts.ttl text/turtle en files/demo-concepts.ttl
        skos-ap-no/files/demo-concepts-en.html text/html en files/demo-concepts-en.html
        skos-ap-no/files/demo-concepts-nb.html text/html nb files/demo-concepts-nb.html
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      STATIC_RDF_SERVER_API_KEY: ${{ secrets.STATIC_RDF_SERVER_API_KEY }}
 
  xkos_build_deploy:
    needs: filter_path
    if: ${{ needs.filter_path.outputs.xkos == 'true' }}
    uses: Informasjonsforvaltning/workflows/.github/workflows/specification-upload-files.yaml@main
    name: xkos-ap-no
    with:
      ontology-type: "showroom"
      ontology: "xkos-ap-no"
      host: "https://data.norge.no"
      program: "asciidoctor -D xkos-ap-no -o index.html -a lang=en xkos-ap-no/main.adoc"
      files: |
        xkos-ap-no/index.html text/html en
        xkos-ap-no/images/demo-classification1.png image/png en images/demo-classification1.png
        xkos-ap-no/files/demo-classifications.ttl text/turtle en files/demo-classifications.ttl
        xkos-ap-no/files/demo-classifications-en.html text/html en files/demo-classifications-en.html
        xkos-ap-no/files/demo-classifications-nb.html text/html nb files/demo-classifications-nb.html
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      STATIC_RDF_SERVER_API_KEY: ${{ secrets.STATIC_RDF_SERVER_API_KEY }}
    